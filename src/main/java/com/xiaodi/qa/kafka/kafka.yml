spring:
  data:
    mongodb:
      host: 10.4.4.9
      database: clannad
      port: 27017
      authentication-database: admin
      username: testvpc_mongo_rw
      password: xJqbP8LwuNw2dQNH
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
  devtools:
    restart:
      enabled: false
      additional-paths: src/main/java
      exclude: assets/**,pages/**
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  redis:
    database: 0 # Redis数据库索引（默认为0）
    timeout: 10000
    redis-clannad:
      host: public-redis-crs.wpt.com
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-clannad-1:
      host: public-redis-crs.wpt.com
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
      database: 1
    redis-clannad-2:
      host: public-redis-crs.wpt.com
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
      database: 2
    redis-wpt:
      host: 10.154.19.175
      port: 6380
      password: wpt-redis-auth
      testOnBorrow: false
    redis-monitor:
      host: public-redis-crs.wpt.com
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
      database: 2

    redis-test1:
      host: 10.6.6.117
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test2:
      host: 10.6.6.216
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test3:
      host: 10.6.6.162
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test4:
      host: 10.6.6.114
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test5:
      host: 10.6.6.79
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test6:
      host: 10.6.6.4
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test7:
      host: 10.6.6.183
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test9:
      host: 10.6.6.91
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test10:
      host: 10.6.6.65
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test12:
      host: 10.6.6.62
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-test13:
      host: 10.6.6.92
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    redis-dev2:
      host: 10.6.6.127
      port: 19000
      password: tencent-test-redis
      testOnBorrow: false
    jedis:
      pool:
        max-active: 200
        max-wait: -1
        max-idle: 10
        min-idle: 0 # 连接池中的最小空闲连接
  kafka:
    #bootstrap-servers: t-kafka-log.wptqc.com:9092
    bootstrap-servers: 10.6.6.19:9092
    listener:
      concurrency: 9
      ack-mode: MANUAL_IMMEDIATE
      poll-timeout: 1500
    consumer:
      group-id: consumerRelease_clannad
      topic: ereport_release
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: latest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties: {session.timeout.ms: 6000, auto.offset.reset: earliest}
    producer:
      topic: ereport_release
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 65536
      buffer-memory: 524288
      retries: 10
      servers: 10.6.6.19:9092
      acks: all